<Controls:MetroWindow
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:LogicTool="clr-namespace:LogicTool;assembly=LogicTool"
        xmlns:local="clr-namespace:MarxEngineTool"
        xmlns:ViewModel="clr-namespace:LogicTool.ViewModel;assembly=LogicTool"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:CloseableTabItemDemo="clr-namespace:CloseableTabItemDemo"
        xmlns:LogicCommon="clr-namespace:LogicCommon;assembly=OpenGLManagedCpp"
        xmlns:avalonDock="http://schemas.xceed.com/wpf/xaml/avalondock"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:MVVMTestApp="clr-namespace:AvalonDock.MVVMTestApp"
        xmlns:Controls1="clr-namespace:System.Windows.Controls"
        mc:Ignorable="d" x:Class="MarxEngineTool.OpenGLHWndWindow" Height="982" Width="1523"
        Loaded="Window_Loaded" KeyDown="Window_KeyDown" Title="Marx Engine"
        BorderThickness="1" Unloaded="MetroWindow_Unloaded"
    >
    <Controls:MetroWindow.Resources>
        <VisualBrush x:Key="DotFillBrush" TileMode="Tile" Viewport="0,0,5,5" ViewportUnits="Absolute" Viewbox="0,0,6,6" ViewboxUnits="Absolute">
            <VisualBrush.Visual>
                <Canvas>
                    <Rectangle Fill="#FF5D5D5D" Width="1.5" Height="1.5" Canvas.Left="3" Canvas.Top="3"/>
                    <Rectangle Fill="#FF5D5D5D" Width="1.5" Height="1.5" Canvas.Left="0" Canvas.Top="0"/>
                </Canvas>
            </VisualBrush.Visual>
        </VisualBrush>
        <VisualBrush x:Key="Backgroundtransparent" TileMode="Tile" Viewport="0,0,15,15" ViewportUnits="Absolute" Viewbox="0,0,6,6" ViewboxUnits="Absolute">
            <VisualBrush.Visual>
                <Canvas>
                    <Rectangle Fill="#FF272727" Width="3" Height="3" Canvas.Left="3" Canvas.Top="3"/>
                    <Rectangle Fill="#FF272727" Width="3" Height="3" Canvas.Left="0" Canvas.Top="0"/>
                </Canvas>
            </VisualBrush.Visual>
        </VisualBrush>
        <MVVMTestApp:ActiveDocumentConverter x:Key="ActiveDocumentConverter"/>
        <avalonDock:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <DataTemplate x:Key="BitmapSourceTemplate">
            <StackPanel>
                <Image Source="{Binding Mode=OneWay}" HorizontalAlignment="Left" Height="64" Width="64"/>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="PieceInfoTemplate">
            <StackPanel>
                <TextBlock Text="{Binding AlphaTextureFilePath}"/>
                <TextBlock Text="{Binding Height}"/>
                <TextBlock Text="{Binding TextureFilePath}"/>
                <TextBlock Text="{Binding Width}"/>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="BitmapSourceTemplate1">
            <StackPanel>
                <Image Source="{Binding Mode=OneWay}" HorizontalAlignment="Left" Height="64" Width="64"/>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="PieceInfoTemplate1">
            <StackPanel Height="Auto" MinWidth="50" MinHeight="50" Width="Auto">
                <Image Source="{Binding BitmapSource}" HorizontalAlignment="Center" Height="80" Width="80" MinWidth="50" MinHeight="50" Margin="0" d:LayoutOverrides="LeftPosition, RightPosition"/>
                <TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Text="{Binding TextureName}" VerticalAlignment="Stretch" Background="White" Foreground="Black" Margin="0" d:LayoutOverrides="TopPosition, BottomPosition" Width="80" TextAlignment="Center"/>
            </StackPanel>
        </DataTemplate>
        <ItemsPanelTemplate x:Key="ItemsPanelTemplate1">
            <WrapPanel IsItemsHost="True" Orientation="Horizontal" ScrollViewer.VerticalScrollBarVisibility="Auto"/>
        </ItemsPanelTemplate>
        <HierarchicalDataTemplate x:Key="MarxObjectTreeViewModelTemplate" ItemsSource="{Binding Children}">
            <StackPanel>
                <CheckBox IsChecked="{Binding HasDummyChild, Mode=OneWay}"/>
                <CheckBox IsChecked="{Binding IsExpanded}"/>
                <CheckBox IsChecked="{Binding IsSelected}"/>
            </StackPanel>
        </HierarchicalDataTemplate>
        <HierarchicalDataTemplate x:Key="MarxObjectTreeViewModelTemplate1" ItemsSource="{Binding Children}">
            <StackPanel>
                <CheckBox IsChecked="{Binding HasDummyChild, Mode=OneWay}"/>
                <CheckBox IsChecked="{Binding IsExpanded}"/>
                <CheckBox IsChecked="{Binding IsSelected}"/>
            </StackPanel>
        </HierarchicalDataTemplate>
        <HierarchicalDataTemplate x:Key="ObjectInterfaceTemplate">
            <StackPanel Orientation="Horizontal" Width="Auto">
                <Viewbox Stretch="Fill" Height="25" Width="25">
                    <local:SourceTextureView TgaImageUri="{Binding TextureName}" Height="150" Width="150"/>
                </Viewbox>
                <StackPanel Orientation="Horizontal" d:LayoutOverrides="Width">
                    <TextBlock VerticalAlignment="Center"><Run Text="Name :"/><Run Text=" "/></TextBlock>
                    <TextBlock Text="{Binding ObjectName}" VerticalAlignment="Center"/>
                </StackPanel>
            </StackPanel>
        </HierarchicalDataTemplate>
        <HierarchicalDataTemplate x:Key="ObjectInterfaceTemplate1" ItemsSource="{Binding Children}">
            <StackPanel Orientation="Horizontal">
                <local:SourceTextureView x:Name="__" Height="20" Width="20" TgaImageUri="{Binding TextureName}"/>
                <TextBlock Text="{Binding Name}"/>
            </StackPanel>
        </HierarchicalDataTemplate>
        <DataTemplate x:Key="PieceInfoTemplate2">
            <StackPanel>
                <Image Source="{Binding BitmapSource}" HorizontalAlignment="Left" Width="50" Height="50"/>
                <TextBlock Text="{Binding TextureFilePath}"/>
                <TextBlock Text="{Binding TextureName}"/>
            </StackPanel>
        </DataTemplate>
        <HierarchicalDataTemplate x:Key="UIobjectInterfaceTemplate" ItemsSource="{Binding Children}">
            <StackPanel>
                <TextBlock Text="{Binding _ScaleX}"/>
                <TextBlock Text="{Binding _ScaleY}"/>
                <TextBlock Text="{Binding Height}"/>
                <TextBlock Text="{Binding Name}"/>
                <TextBlock Text="{Binding rotate}"/>
                <TextBlock Text="{Binding TextureName}"/>
                <TextBlock Text="{Binding transparent}"/>
                <TextBlock Text="{Binding Width}"/>
                <TextBlock Text="{Binding x}"/>
                <TextBlock Text="{Binding y}"/>
                <TextBlock Text="{Binding zindex}"/>
            </StackPanel>
        </HierarchicalDataTemplate>
        <HierarchicalDataTemplate x:Key="DataTemplat2" ItemsSource="{Binding Children}">
            <StackPanel Orientation="Horizontal">
                <local:SourceTextureView x:Name="__" Height="20" Width="20" TgaImageUri="{Binding TextureName}"/>
                <TextBlock Text="{Binding ObjectName}" Margin="0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
            </StackPanel>
        </HierarchicalDataTemplate>
        <Storyboard x:Key="Storyboard1"/>
        <Style x:Key="PropertyItemBaseStyle1" TargetType="{x:Type xctk:PropertyItemBase}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Margin" Value="0,0,0,1"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type xctk:PropertyItemBase}">
                        <Border ContextMenu="{Binding AdvancedOptionsMenu, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:PropertyGrid}}}" ContextMenuService.Placement="Bottom">
                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{Binding NameColumnWidth, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:PropertyGrid}}}"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Border x:Name="PART_Name" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding BorderBrush}" HorizontalAlignment="Stretch" Margin="0,0,1,0" VerticalAlignment="Stretch">
                                    <Grid Margin="2" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Background="#FF5D5D5D">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="15"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.Margin>
                                                <Binding Path="Level" RelativeSource="{RelativeSource TemplatedParent}">
                                                    <Binding.Converter>
                                                        <xctk:ExpandableObjectMarginConverter/>
                                                    </Binding.Converter>
                                                </Binding>
                                            </Grid.Margin>
                                            <ToggleButton x:Name="__" Grid.Column="0" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" OverridesDefaultStyle="True">
                                                <ToggleButton.Template>
                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="20"/>
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Rectangle x:Name="Rectangle" Fill="Transparent" Margin="0"/>
                                                            <Path x:Name="Up_Arrow" Data="M0,0L4,4 8,0z" Fill="#FF31347C" HorizontalAlignment="Center" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Center">
                                                                <Path.RenderTransform>
                                                                    <TransformGroup>
                                                                        <ScaleTransform ScaleY="1" ScaleX="1"/>
                                                                        <SkewTransform AngleY="0" AngleX="0"/>
                                                                        <RotateTransform Angle="-90"/>
                                                                        <TranslateTransform X="0" Y="0"/>
                                                                    </TransformGroup>
                                                                </Path.RenderTransform>
                                                            </Path>
                                                            <Path x:Name="Down_Arrow" Data="M0,4L4,0 8,4z" Fill="#FF31347C" HorizontalAlignment="Center" RenderTransformOrigin="0.5,0.5" Visibility="Collapsed" VerticalAlignment="Center">
                                                                <Path.RenderTransform>
                                                                    <TransformGroup>
                                                                        <ScaleTransform ScaleY="1" ScaleX="1"/>
                                                                        <SkewTransform AngleY="0" AngleX="0"/>
                                                                        <RotateTransform Angle="135"/>
                                                                        <TranslateTransform X="0" Y="0"/>
                                                                    </TransformGroup>
                                                                </Path.RenderTransform>
                                                            </Path>
                                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsChecked" Value="True">
                                                                <Setter Property="Visibility" TargetName="Down_Arrow" Value="Visible"/>
                                                                <Setter Property="Visibility" TargetName="Up_Arrow" Value="Collapsed"/>
                                                                <Setter Property="OpacityMask" TargetName="Down_Arrow" Value="Black"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </ToggleButton.Template>
                                                <ToggleButton.Visibility>
                                                    <Binding Path="IsExpandable" RelativeSource="{RelativeSource TemplatedParent}">
                                                        <Binding.Converter>
                                                            <BooleanToVisibilityConverter/>
                                                        </Binding.Converter>
                                                    </Binding>
                                                </ToggleButton.Visibility>
                                            </ToggleButton>
                                            <xctk:TrimmedTextBlock x:Name="_text" Grid.Column="1" HorizontalAlignment="Stretch" Text="{Binding DisplayName, RelativeSource={RelativeSource TemplatedParent}}" TextTrimming="CharacterEllipsis" VerticalAlignment="Center">
                                                <xctk:TrimmedTextBlock.IsEnabled>
                                                    <Binding Path="IsReadOnly" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:PropertyGrid}}">
                                                        <Binding.Converter>
                                                            <xctk:InverseBoolConverter/>
                                                        </Binding.Converter>
                                                    </Binding>
                                                </xctk:TrimmedTextBlock.IsEnabled>
                                            </xctk:TrimmedTextBlock>
                                        </Grid>
                                        <Grid Grid.Column="1" ContextMenu="{Binding AdvancedOptionsMenu, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:PropertyGrid}}}" HorizontalAlignment="Right" Margin="5,0" xctk:ContextMenuUtilities.OpenOnMouseLeftButtonClick="True">
                                            <Grid.Visibility>
                                                <Binding Path="ShowAdvancedOptions" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:PropertyGrid}}">
                                                    <Binding.Converter>
                                                        <BooleanToVisibilityConverter/>
                                                    </Binding.Converter>
                                                </Binding>
                                            </Grid.Visibility>
                                            <Image x:Name="_optionsImage" Height="11" ToolTip="{Binding AdvancedOptionsTooltip, RelativeSource={RelativeSource TemplatedParent}}" Width="11"/>
                                        </Grid>
                                    </Grid>
                                </Border>
                                <Border x:Name="PART_Editor" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1" KeyboardNavigation.DirectionalNavigation="None" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                    <Border.ToolTip>
                                        <ToolTip Visibility="Collapsed"/>
                                    </Border.ToolTip>
                                    <ContentControl x:Name="PART_ValueContainer" Content="{TemplateBinding Editor}" Focusable="False" IsTabStop="False" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                        <ContentControl.IsEnabled>
                                            <Binding Path="IsReadOnly" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:PropertyGrid}}">
                                                <Binding.Converter>
                                                    <xctk:InverseBoolConverter/>
                                                </Binding.Converter>
                                            </Binding>
                                        </ContentControl.IsEnabled>
                                    </ContentControl>
                                </Border>
                                <Expander x:Name="_propertyExpander" Grid.ColumnSpan="2" IsExpanded="{TemplateBinding IsExpanded}" IsEnabled="True" Grid.Row="1">
                                    <Expander.Style>
                                        <Style TargetType="{x:Type Expander}">
                                            <Setter Property="Padding" Value="10,0,0,0"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Expander}">
                                                        <Grid>
                                                            <Border x:Name="ExpandSite" Padding="0" Grid.Row="1" Visibility="Collapsed">
                                                                <Border BorderThickness="0" HorizontalAlignment="Stretch" Margin="0" Padding="0" VerticalAlignment="Stretch">
                                                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                </Border>
                                                            </Border>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsExpanded" Value="True">
                                                                <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Expander.Style>
                                    <xctk:PropertyItemsControl x:Name="PART_PropertyItemsControl" Focusable="False" IsTabStop="False" ItemContainerStyle="{Binding PropertyContainerStyle, RelativeSource={RelativeSource TemplatedParent}}">
                                        <xctk:PropertyItemsControl.GroupStyle>
                                            <GroupStyle Panel="{x:Null}">
                                                <GroupStyle.ContainerStyleSelector>
                                                    <xctk:CategoryGroupStyleSelector>
                                                        <xctk:CategoryGroupStyleSelector.ItemGroupStyle>
                                                            <Style TargetType="{x:Type GroupItem}">
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate>
                                                                            <Border>
                                                                                <Expander x:Name="expander" Header="{Binding Name}" IsExpanded="True">
                                                                                    <Expander.Style>
                                                                                        <Style TargetType="{x:Type Expander}">
                                                                                            <Setter Property="Padding" Value="0"/>
                                                                                            <Setter Property="Background" Value="#FFF0F0F0"/>
                                                                                            <Setter Property="Template">
                                                                                                <Setter.Value>
                                                                                                    <ControlTemplate TargetType="{x:Type Expander}">
                                                                                                        <Grid>
                                                                                                            <Grid.RowDefinitions>
                                                                                                                <RowDefinition Height="Auto"/>
                                                                                                                <RowDefinition x:Name="ContentRow" Height="*"/>
                                                                                                            </Grid.RowDefinitions>
                                                                                                            <Border x:Name="Border" BorderBrush="#FFF0F0F0" Background="{TemplateBinding Background}">
                                                                                                                <ToggleButton IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" OverridesDefaultStyle="True">
                                                                                                                    <ToggleButton.Template>
                                                                                                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                                                            <Grid>
                                                                                                                                <Grid.ColumnDefinitions>
                                                                                                                                    <ColumnDefinition Width="20"/>
                                                                                                                                    <ColumnDefinition Width="*"/>
                                                                                                                                </Grid.ColumnDefinitions>
                                                                                                                                <Rectangle x:Name="Rectangle" Fill="Transparent" Margin="0"/>
                                                                                                                                <Path x:Name="Up_Arrow" Data="M0,0L4,4 8,0z" Fill="#FF31347C" HorizontalAlignment="Center" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Center">
                                                                                                                                    <Path.RenderTransform>
                                                                                                                                        <TransformGroup>
                                                                                                                                            <ScaleTransform ScaleY="1" ScaleX="1"/>
                                                                                                                                            <SkewTransform AngleY="0" AngleX="0"/>
                                                                                                                                            <RotateTransform Angle="-90"/>
                                                                                                                                            <TranslateTransform X="0" Y="0"/>
                                                                                                                                        </TransformGroup>
                                                                                                                                    </Path.RenderTransform>
                                                                                                                                </Path>
                                                                                                                                <Path x:Name="Down_Arrow" Data="M0,4L4,0 8,4z" Fill="#FF31347C" HorizontalAlignment="Center" RenderTransformOrigin="0.5,0.5" Visibility="Collapsed" VerticalAlignment="Center">
                                                                                                                                    <Path.RenderTransform>
                                                                                                                                        <TransformGroup>
                                                                                                                                            <ScaleTransform ScaleY="1" ScaleX="1"/>
                                                                                                                                            <SkewTransform AngleY="0" AngleX="0"/>
                                                                                                                                            <RotateTransform Angle="135"/>
                                                                                                                                            <TranslateTransform X="0" Y="0"/>
                                                                                                                                        </TransformGroup>
                                                                                                                                    </Path.RenderTransform>
                                                                                                                                </Path>
                                                                                                                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
                                                                                                                            </Grid>
                                                                                                                            <ControlTemplate.Triggers>
                                                                                                                                <Trigger Property="IsChecked" Value="True">
                                                                                                                                    <Setter Property="Visibility" TargetName="Down_Arrow" Value="Visible"/>
                                                                                                                                    <Setter Property="Visibility" TargetName="Up_Arrow" Value="Collapsed"/>
                                                                                                                                    <Setter Property="OpacityMask" TargetName="Down_Arrow" Value="Black"/>
                                                                                                                                </Trigger>
                                                                                                                            </ControlTemplate.Triggers>
                                                                                                                        </ControlTemplate>
                                                                                                                    </ToggleButton.Template>
                                                                                                                    <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" TextElement.FontWeight="Bold" Margin="1" RecognizesAccessKey="True"/>
                                                                                                                </ToggleButton>
                                                                                                            </Border>
                                                                                                            <Border x:Name="ExpandSite" Background="#FFF0F0F0" Padding="10,0,0,0" Grid.Row="1" Visibility="Collapsed">
                                                                                                                <Border BorderThickness="0" HorizontalAlignment="Stretch" Margin="0" Padding="0" VerticalAlignment="Stretch">
                                                                                                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                                </Border>
                                                                                                            </Border>
                                                                                                        </Grid>
                                                                                                        <ControlTemplate.Triggers>
                                                                                                            <Trigger Property="IsExpanded" Value="True">
                                                                                                                <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                                                                                                            </Trigger>
                                                                                                        </ControlTemplate.Triggers>
                                                                                                    </ControlTemplate>
                                                                                                </Setter.Value>
                                                                                            </Setter>
                                                                                        </Style>
                                                                                    </Expander.Style>
                                                                                    <ItemsPresenter/>
                                                                                </Expander>
                                                                            </Border>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Style.Triggers>
                                                                    <MultiDataTrigger>
                                                                        <MultiDataTrigger.Conditions>
                                                                            <Condition Value="True">
                                                                                <Condition.Binding>
                                                                                    <Binding Path="Name">
                                                                                        <Binding.Converter>
                                                                                            <xctk:IsDefaultCategoryConverter/>
                                                                                        </Binding.Converter>
                                                                                    </Binding>
                                                                                </Condition.Binding>
                                                                            </Condition>
                                                                            <Condition Binding="{Binding IsMiscCategoryLabelHidden, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:PropertyGrid}}}" Value="True"/>
                                                                        </MultiDataTrigger.Conditions>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type GroupItem}">
                                                                                    <ItemsPresenter/>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </MultiDataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </xctk:CategoryGroupStyleSelector.ItemGroupStyle>
                                                        <xctk:CategoryGroupStyleSelector.SingleDefaultCategoryItemGroupStyle>
                                                            <Style TargetType="{x:Type GroupItem}">
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate>
                                                                            <ItemsPresenter/>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </xctk:CategoryGroupStyleSelector.SingleDefaultCategoryItemGroupStyle>
                                                    </xctk:CategoryGroupStyleSelector>
                                                </GroupStyle.ContainerStyleSelector>
                                            </GroupStyle>
                                        </xctk:PropertyItemsControl.GroupStyle>
                                        <xctk:PropertyItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel IsItemsHost="True"/>
                                            </ItemsPanelTemplate>
                                        </xctk:PropertyItemsControl.ItemsPanel>
                                    </xctk:PropertyItemsControl>
                                </Expander>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="PART_Name" Value="#FFCED4DF"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" TargetName="PART_Name" Value="#FF43577B"/>
                                <Setter Property="TextElement.Foreground" TargetName="PART_Name" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" TargetName="PART_ValueContainer" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                <Setter Property="Foreground" TargetName="_text" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ShowDescriptionByTooltip, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:PropertyGrid}}}" Value="True"/>
                                    <Condition Value="False">
                                        <Condition.Binding>
                                            <Binding Path="Description" RelativeSource="{RelativeSource Self}">
                                                <Binding.Converter>
                                                    <xctk:IsStringEmptyConverter/>
                                                </Binding.Converter>
                                            </Binding>
                                        </Condition.Binding>
                                    </Condition>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="ToolTip" TargetName="PART_Name" Value="{Binding Description, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </MultiDataTrigger>
                            <Trigger Property="Validation.HasError" Value="True">
                                <Setter Property="ToolTip" Value="{Binding (Validation.Errors).CurrentItem.ErrorContent, RelativeSource={RelativeSource Self}}"/>
                            </Trigger>
                            <Trigger Property="Visibility" SourceName="__" Value="Visible">
                                <Setter Property="Focusable" Value="False"/>
                            </Trigger>
                            <DataTrigger Binding="{Binding ToolTip, ElementName=_optionsImage}" Value="Local">
                                <Setter Property="Source" TargetName="_optionsImage">
                                    <Setter.Value>
                                        <BitmapImage UriSource="pack://application:,,,/Xceed.Wpf.Toolkit;v2.9.0.0;component/PropertyGrid/Images/Local11.png"/>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ToolTip, ElementName=_optionsImage}" Value="Resource">
                                <Setter Property="Source" TargetName="_optionsImage">
                                    <Setter.Value>
                                        <BitmapImage UriSource="pack://application:,,,/Xceed.Wpf.Toolkit;v2.9.0.0;component/PropertyGrid/Images/Resource11.png"/>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ToolTip, ElementName=_optionsImage}" Value="Databinding">
                                <Setter Property="Source" TargetName="_optionsImage">
                                    <Setter.Value>
                                        <BitmapImage UriSource="pack://application:,,,/Xceed.Wpf.Toolkit;v2.9.0.0;component/PropertyGrid/Images/Database11.png"/>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ToolTip, ElementName=_optionsImage}" Value="Inheritance">
                                <Setter Property="Source" TargetName="_optionsImage">
                                    <Setter.Value>
                                        <BitmapImage UriSource="pack://application:,,,/Xceed.Wpf.Toolkit;v2.9.0.0;component/PropertyGrid/Images/Inheritance11.png"/>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ToolTip, ElementName=_optionsImage}" Value="Style Setter">
                                <Setter Property="Source" TargetName="_optionsImage">
                                    <Setter.Value>
                                        <BitmapImage UriSource="pack://application:,,,/Xceed.Wpf.Toolkit;v2.9.0.0;component/PropertyGrid/Images/Style11.png"/>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ToolTip, ElementName=_optionsImage}" Value="Advanced Properties">
                                <Setter Property="Source" TargetName="_optionsImage">
                                    <Setter.Value>
                                        <BitmapImage UriSource="pack://application:,,,/Xceed.Wpf.Toolkit;v2.9.0.0;component/PropertyGrid/Images/AdvancedProperties11.png"/>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="PropertyGridStyle1" TargetType="{x:Type xctk:PropertyGrid}">
            <Setter Property="AdvancedOptionsMenu">
                <Setter.Value>
                    <ContextMenu>
                        <MenuItem Header="Reset Value">
                            <MenuItem.Command>
                                <RoutedCommand/>
                            </MenuItem.Command>
                        </MenuItem>
                    </ContextMenu>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="#FFBCC7D8"/>
            <Setter Property="BorderBrush" Value="#FF43577B"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="SelectedObjectType">
                <Setter.Value>
                    <Binding ConverterParameter="Type" Path="SelectedObject" RelativeSource="{RelativeSource Self}">
                        <Binding.Converter>
                            <xctk:SelectedObjectConverter/>
                        </Binding.Converter>
                    </Binding>
                </Setter.Value>
            </Setter>
            <Setter Property="SelectedObjectTypeName">
                <Setter.Value>
                    <Binding ConverterParameter="TypeName" Path="SelectedObject" RelativeSource="{RelativeSource Self}">
                        <Binding.Converter>
                            <xctk:SelectedObjectConverter/>
                        </Binding.Converter>
                    </Binding>
                </Setter.Value>
            </Setter>
            <Setter Property="SelectedObjectName">
                <Setter.Value>
                    <Binding ConverterParameter="SelectedObjectName" Path="SelectedObject" RelativeSource="{RelativeSource Self}">
                        <Binding.Converter>
                            <xctk:SelectedObjectConverter/>
                        </Binding.Converter>
                    </Binding>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type xctk:PropertyGrid}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                            <Grid Margin="{TemplateBinding Padding}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                    <RowDefinition Height="5"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <StackPanel x:Name="selectObjectNamePanel" Orientation="Horizontal">
                                    <Border BorderBrush="Black" BorderThickness="1" Background="White" Height="44" Margin="6,4,0,4" Padding="2" Width="44">
                                        <Border.Visibility>
                                            <Binding Path="ShowPreview" RelativeSource="{RelativeSource TemplatedParent}">
                                                <Binding.Converter>
                                                    <BooleanToVisibilityConverter/>
                                                </Binding.Converter>
                                            </Binding>
                                        </Border.Visibility>
                                        <Rectangle>
                                            <Rectangle.Fill>
                                                <VisualBrush Stretch="Uniform">
                                                    <VisualBrush.Visual>
                                                        <Binding Path="SelectedObject" RelativeSource="{RelativeSource TemplatedParent}">
                                                            <Binding.Converter>
                                                                <xctk:ObjectToUIElementConverter/>
                                                            </Binding.Converter>
                                                        </Binding>
                                                    </VisualBrush.Visual>
                                                </VisualBrush>
                                            </Rectangle.Fill>
                                        </Rectangle>
                                    </Border>
                                    <StackPanel Margin="6,2,6,4" Orientation="Horizontal" VerticalAlignment="Center">
                                        <StackPanel.Visibility>
                                            <Binding Path="ShowTitle" RelativeSource="{RelativeSource TemplatedParent}">
                                                <Binding.Converter>
                                                    <BooleanToVisibilityConverter/>
                                                </Binding.Converter>
                                            </Binding>
                                        </StackPanel.Visibility>
                                        <Grid>
                                            <Grid.MaxWidth>
                                                <Binding ConverterParameter="17" Path="ActualWidth" RelativeSource="{RelativeSource TemplatedParent}">
                                                    <Binding.Converter>
                                                        <xctk:HalfConverter/>
                                                    </Binding.Converter>
                                                </Binding>
                                            </Grid.MaxWidth>
                                            <xctk:TrimmedTextBlock FontWeight="Bold" Text="{TemplateBinding SelectedObjectTypeName}" TextTrimming="CharacterEllipsis"/>
                                        </Grid>
                                        <Grid Margin="5,0,0,0">
                                            <Grid.MaxWidth>
                                                <Binding ConverterParameter="17" Path="ActualWidth" RelativeSource="{RelativeSource TemplatedParent}">
                                                    <Binding.Converter>
                                                        <xctk:HalfConverter/>
                                                    </Binding.Converter>
                                                </Binding>
                                            </Grid.MaxWidth>
                                            <xctk:TrimmedTextBlock Text="{TemplateBinding SelectedObjectName}" TextTrimming="CharacterEllipsis"/>
                                        </Grid>
                                    </StackPanel>
                                </StackPanel>
                                <Grid x:Name="toolsContainer" Margin="4,0,4,4" Grid.Row="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid x:Name="sortButtonContainer" Margin="4">
                                        <Grid.Visibility>
                                            <Binding Path="ShowSortOptions" RelativeSource="{RelativeSource TemplatedParent}">
                                                <Binding.Converter>
                                                    <BooleanToVisibilityConverter/>
                                                </Binding.Converter>
                                            </Binding>
                                        </Grid.Visibility>
                                        <StackPanel Margin="1" Orientation="Horizontal">
                                            <RadioButton IsChecked="{Binding IsCategorized, RelativeSource={RelativeSource TemplatedParent}}" ToolTip="Categorized" VerticalAlignment="Center">
                                                <RadioButton.Style>
                                                    <Style TargetType="{x:Type RadioButton}">
                                                        <Setter Property="Background" Value="Transparent"/>
                                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                                        <Setter Property="BorderThickness" Value="1"/>
                                                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                        <Setter Property="Height" Value="22"/>
                                                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                        <Setter Property="ToolTipService.InitialShowDelay" Value="900"/>
                                                        <Setter Property="ToolTipService.ShowDuration" Value="20000"/>
                                                        <Setter Property="ToolTipService.BetweenShowDelay" Value="0"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type RadioButton}">
                                                                    <Grid SnapsToDevicePixels="True">
                                                                        <Border x:Name="OuterBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="2"/>
                                                                        <Border x:Name="MiddleBorder" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" CornerRadius="2">
                                                                            <Border x:Name="InnerBorder" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" CornerRadius="2" Padding="{TemplateBinding Padding}">
                                                                                <StackPanel x:Name="StackPanel" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                                                                                    <ContentPresenter x:Name="Content" RenderOptions.BitmapScalingMode="NearestNeighbor" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="Center"/>
                                                                                </StackPanel>
                                                                            </Border>
                                                                        </Border>
                                                                    </Grid>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsMouseOver" Value="True">
                                                                            <Setter Property="Background" TargetName="OuterBorder">
                                                                                <Setter.Value>
                                                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                        <GradientStop Color="#FFFEFBF4" Offset="0"/>
                                                                                        <GradientStop Color="#FFFDE7CE" Offset="0.19"/>
                                                                                        <GradientStop Color="#FFFDDEB8" Offset="0.39"/>
                                                                                        <GradientStop Color="#FFFFCE6B" Offset="0.39"/>
                                                                                        <GradientStop Color="#FFFFDE9A" Offset="0.79"/>
                                                                                        <GradientStop Color="#FFFFEBAA" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                            <Setter Property="BorderBrush" TargetName="OuterBorder" Value="#FFFFB700"/>
                                                                            <Setter Property="BorderBrush" TargetName="InnerBorder" Value="#80FFFFFF"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                            <Setter Property="Opacity" TargetName="Content" Value="0.5"/>
                                                                            <Setter Property="TextElement.Foreground" TargetName="OuterBorder" Value="#FF9E9E9E"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsChecked" Value="True">
                                                                            <Setter Property="Background" TargetName="OuterBorder">
                                                                                <Setter.Value>
                                                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                        <GradientStop Color="#FFFFDCA0" Offset="0"/>
                                                                                        <GradientStop Color="#FFFFD692" Offset="0.18"/>
                                                                                        <GradientStop Color="#FFFFC45D" Offset="0.39"/>
                                                                                        <GradientStop Color="#FFFFD178" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                            <Setter Property="BorderBrush" TargetName="OuterBorder" Value="#FFC29B29"/>
                                                                            <Setter Property="BorderBrush" TargetName="InnerBorder">
                                                                                <Setter.Value>
                                                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                        <GradientStop Color="#FFE7CBAD" Offset="0"/>
                                                                                        <GradientStop Color="#FFF7D7B5" Offset="0.1"/>
                                                                                        <GradientStop Color="#FFFFD38C" Offset="0.36"/>
                                                                                        <GradientStop Color="#FFFFC75A" Offset="0.36"/>
                                                                                        <GradientStop Color="#FFFFEFA5" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Trigger>
                                                                        <Trigger Property="IsPressed" Value="True">
                                                                            <Setter Property="Background" TargetName="OuterBorder">
                                                                                <Setter.Value>
                                                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                        <GradientStop Color="#FFE3C085" Offset="0"/>
                                                                                        <GradientStop Color="#FFF4CC89" Offset="0.19"/>
                                                                                        <GradientStop Color="#FFF5C777" Offset="0.36"/>
                                                                                        <GradientStop Color="#FFF5BB56" Offset="0.36"/>
                                                                                        <GradientStop Color="#FFF4CE9A" Offset="0.79"/>
                                                                                        <GradientStop Color="#FFF3E28D" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                            <Setter Property="BorderBrush" TargetName="OuterBorder" Value="#FFC29B29"/>
                                                                            <Setter Property="BorderBrush" TargetName="InnerBorder" Value="Transparent"/>
                                                                        </Trigger>
                                                                        <MultiTrigger>
                                                                            <MultiTrigger.Conditions>
                                                                                <Condition Property="IsChecked" Value="True"/>
                                                                                <Condition Property="IsMouseOver" Value="True"/>
                                                                            </MultiTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="MiddleBorder">
                                                                                <Setter.Value>
                                                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                        <GradientStop Color="#40FFFEFE" Offset="0"/>
                                                                                        <GradientStop Color="#40FFFEFE" Offset="0.39"/>
                                                                                        <GradientStop Color="#20FFCE68" Offset="0.39"/>
                                                                                        <GradientStop Color="#20FFCE68" Offset="0.69"/>
                                                                                        <GradientStop Color="#10FFFFFF" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </MultiTrigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </RadioButton.Style>
                                                <Image Height="16" Width="16">
                                                    <Image.Source>
                                                        <BitmapImage UriSource="pack://application:,,,/Xceed.Wpf.Toolkit;v2.9.0.0;component/PropertyGrid/Images/Categorize16.png"/>
                                                    </Image.Source>
                                                </Image>
                                            </RadioButton>
                                            <RadioButton ToolTip="Alphabetical" VerticalAlignment="Center">
                                                <RadioButton.IsChecked>
                                                    <Binding Mode="OneWay" Path="IsCategorized" RelativeSource="{RelativeSource TemplatedParent}">
                                                        <Binding.Converter>
                                                            <xctk:InverseBoolConverter/>
                                                        </Binding.Converter>
                                                    </Binding>
                                                </RadioButton.IsChecked>
                                                <RadioButton.Style>
                                                    <Style TargetType="{x:Type RadioButton}">
                                                        <Setter Property="Background" Value="Transparent"/>
                                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                                        <Setter Property="BorderThickness" Value="1"/>
                                                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                        <Setter Property="Height" Value="22"/>
                                                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                        <Setter Property="ToolTipService.InitialShowDelay" Value="900"/>
                                                        <Setter Property="ToolTipService.ShowDuration" Value="20000"/>
                                                        <Setter Property="ToolTipService.BetweenShowDelay" Value="0"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type RadioButton}">
                                                                    <Grid SnapsToDevicePixels="True">
                                                                        <Border x:Name="OuterBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="2"/>
                                                                        <Border x:Name="MiddleBorder" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" CornerRadius="2">
                                                                            <Border x:Name="InnerBorder" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" CornerRadius="2" Padding="{TemplateBinding Padding}">
                                                                                <StackPanel x:Name="StackPanel" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                                                                                    <ContentPresenter x:Name="Content" RenderOptions.BitmapScalingMode="NearestNeighbor" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="Center"/>
                                                                                </StackPanel>
                                                                            </Border>
                                                                        </Border>
                                                                    </Grid>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsMouseOver" Value="True">
                                                                            <Setter Property="Background" TargetName="OuterBorder">
                                                                                <Setter.Value>
                                                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                        <GradientStop Color="#FFFEFBF4" Offset="0"/>
                                                                                        <GradientStop Color="#FFFDE7CE" Offset="0.19"/>
                                                                                        <GradientStop Color="#FFFDDEB8" Offset="0.39"/>
                                                                                        <GradientStop Color="#FFFFCE6B" Offset="0.39"/>
                                                                                        <GradientStop Color="#FFFFDE9A" Offset="0.79"/>
                                                                                        <GradientStop Color="#FFFFEBAA" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                            <Setter Property="BorderBrush" TargetName="OuterBorder" Value="#FFFFB700"/>
                                                                            <Setter Property="BorderBrush" TargetName="InnerBorder" Value="#80FFFFFF"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                            <Setter Property="Opacity" TargetName="Content" Value="0.5"/>
                                                                            <Setter Property="TextElement.Foreground" TargetName="OuterBorder" Value="#FF9E9E9E"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsChecked" Value="True">
                                                                            <Setter Property="Background" TargetName="OuterBorder">
                                                                                <Setter.Value>
                                                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                        <GradientStop Color="#FFFFDCA0" Offset="0"/>
                                                                                        <GradientStop Color="#FFFFD692" Offset="0.18"/>
                                                                                        <GradientStop Color="#FFFFC45D" Offset="0.39"/>
                                                                                        <GradientStop Color="#FFFFD178" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                            <Setter Property="BorderBrush" TargetName="OuterBorder" Value="#FFC29B29"/>
                                                                            <Setter Property="BorderBrush" TargetName="InnerBorder">
                                                                                <Setter.Value>
                                                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                        <GradientStop Color="#FFE7CBAD" Offset="0"/>
                                                                                        <GradientStop Color="#FFF7D7B5" Offset="0.1"/>
                                                                                        <GradientStop Color="#FFFFD38C" Offset="0.36"/>
                                                                                        <GradientStop Color="#FFFFC75A" Offset="0.36"/>
                                                                                        <GradientStop Color="#FFFFEFA5" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Trigger>
                                                                        <Trigger Property="IsPressed" Value="True">
                                                                            <Setter Property="Background" TargetName="OuterBorder">
                                                                                <Setter.Value>
                                                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                        <GradientStop Color="#FFE3C085" Offset="0"/>
                                                                                        <GradientStop Color="#FFF4CC89" Offset="0.19"/>
                                                                                        <GradientStop Color="#FFF5C777" Offset="0.36"/>
                                                                                        <GradientStop Color="#FFF5BB56" Offset="0.36"/>
                                                                                        <GradientStop Color="#FFF4CE9A" Offset="0.79"/>
                                                                                        <GradientStop Color="#FFF3E28D" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                            <Setter Property="BorderBrush" TargetName="OuterBorder" Value="#FFC29B29"/>
                                                                            <Setter Property="BorderBrush" TargetName="InnerBorder" Value="Transparent"/>
                                                                        </Trigger>
                                                                        <MultiTrigger>
                                                                            <MultiTrigger.Conditions>
                                                                                <Condition Property="IsChecked" Value="True"/>
                                                                                <Condition Property="IsMouseOver" Value="True"/>
                                                                            </MultiTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="MiddleBorder">
                                                                                <Setter.Value>
                                                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                        <GradientStop Color="#40FFFEFE" Offset="0"/>
                                                                                        <GradientStop Color="#40FFFEFE" Offset="0.39"/>
                                                                                        <GradientStop Color="#20FFCE68" Offset="0.39"/>
                                                                                        <GradientStop Color="#20FFCE68" Offset="0.69"/>
                                                                                        <GradientStop Color="#10FFFFFF" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </MultiTrigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </RadioButton.Style>
                                                <Image Height="16" Width="16">
                                                    <Image.Source>
                                                        <BitmapImage UriSource="pack://application:,,,/Xceed.Wpf.Toolkit;v2.9.0.0;component/PropertyGrid/Images/SortAscending16.png"/>
                                                    </Image.Source>
                                                </Image>
                                            </RadioButton>
                                        </StackPanel>
                                    </Grid>
                                    <Border x:Name="searchBoxContainer" BorderBrush="Gray" BorderThickness="1" Background="White" Grid.Column="1" Margin="4,4,0,4">
                                        <Border.Visibility>
                                            <Binding Path="ShowSearchBox" RelativeSource="{RelativeSource TemplatedParent}">
                                                <Binding.Converter>
                                                    <BooleanToVisibilityConverter/>
                                                </Binding.Converter>
                                            </Binding>
                                        </Border.Visibility>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <xctk:WatermarkTextBox x:Name="_txtFilter" Background="Transparent" Text="{Binding Filter, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Watermark="{TemplateBinding FilterWatermark}">
                                                <xctk:WatermarkTextBox.Style>
                                                    <Style TargetType="{x:Type Control}">
                                                        <Setter Property="BorderThickness" Value="0"/>
                                                        <Style.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="BorderThickness" Value="1"/>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </xctk:WatermarkTextBox.Style>
                                            </xctk:WatermarkTextBox>
                                            <Button Grid.Column="1" HorizontalAlignment="Left">
                                                <Button.Command>
                                                    <RoutedCommand/>
                                                </Button.Command>
                                                <Button.Style>
                                                    <Style TargetType="{x:Type Button}">
                                                        <Setter Property="Background" Value="Transparent"/>
                                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                                        <Setter Property="BorderThickness" Value="1"/>
                                                        <Setter Property="Height" Value="22"/>
                                                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                        <Setter Property="ToolTipService.InitialShowDelay" Value="900"/>
                                                        <Setter Property="ToolTipService.ShowDuration" Value="20000"/>
                                                        <Setter Property="ToolTipService.BetweenShowDelay" Value="0"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Button}">
                                                                    <Grid SnapsToDevicePixels="True">
                                                                        <Border x:Name="OuterBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="2"/>
                                                                        <Border x:Name="MiddleBorder" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" CornerRadius="2">
                                                                            <Border x:Name="InnerBorder" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" CornerRadius="2" Padding="{TemplateBinding Padding}">
                                                                                <StackPanel x:Name="StackPanel" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                                                                                    <ContentPresenter x:Name="Content" RenderOptions.BitmapScalingMode="NearestNeighbor" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="Center"/>
                                                                                </StackPanel>
                                                                            </Border>
                                                                        </Border>
                                                                    </Grid>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsMouseOver" Value="True">
                                                                            <Setter Property="Background" TargetName="OuterBorder">
                                                                                <Setter.Value>
                                                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                        <GradientStop Color="#FFFEFBF4" Offset="0"/>
                                                                                        <GradientStop Color="#FFFDE7CE" Offset="0.19"/>
                                                                                        <GradientStop Color="#FFFDDEB8" Offset="0.39"/>
                                                                                        <GradientStop Color="#FFFFCE6B" Offset="0.39"/>
                                                                                        <GradientStop Color="#FFFFDE9A" Offset="0.79"/>
                                                                                        <GradientStop Color="#FFFFEBAA" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                            <Setter Property="BorderBrush" TargetName="OuterBorder" Value="#FFFFB700"/>
                                                                            <Setter Property="BorderBrush" TargetName="InnerBorder" Value="#80FFFFFF"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                            <Setter Property="Opacity" TargetName="Content" Value="0.5"/>
                                                                            <Setter Property="TextElement.Foreground" TargetName="OuterBorder" Value="#FF9E9E9E"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsPressed" Value="True">
                                                                            <Setter Property="Background" TargetName="OuterBorder">
                                                                                <Setter.Value>
                                                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                        <GradientStop Color="#FFE3C085" Offset="0"/>
                                                                                        <GradientStop Color="#FFF4CC89" Offset="0.19"/>
                                                                                        <GradientStop Color="#FFF5C777" Offset="0.36"/>
                                                                                        <GradientStop Color="#FFF5BB56" Offset="0.36"/>
                                                                                        <GradientStop Color="#FFF4CE9A" Offset="0.79"/>
                                                                                        <GradientStop Color="#FFF3E28D" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                            <Setter Property="BorderBrush" TargetName="OuterBorder" Value="#FFC29B29"/>
                                                                            <Setter Property="BorderBrush" TargetName="InnerBorder" Value="Transparent"/>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Button.Style>
                                                <Image Height="16" Width="16">
                                                    <Image.Source>
                                                        <BitmapImage UriSource="pack://application:,,,/Xceed.Wpf.Toolkit;v2.9.0.0;component/PropertyGrid/Images/ClearFilter16.png"/>
                                                    </Image.Source>
                                                </Image>
                                            </Button>
                                        </Grid>
                                    </Border>
                                </Grid>
                                <Grid Background="White" Grid.Row="2">
                                    <ScrollViewer VerticalScrollBarVisibility="Auto" Background="{x:Null}">
                                        <xctk:PropertyItemsControl x:Name="PART_PropertyItemsControl" Background="#FFF0F0F0" Focusable="False" IsTabStop="False" ItemContainerStyle="{Binding PropertyContainerStyle, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Top">
                                            <xctk:PropertyItemsControl.GroupStyle>
                                                <GroupStyle Panel="{x:Null}">
                                                    <GroupStyle.ContainerStyleSelector>
                                                        <xctk:CategoryGroupStyleSelector>
                                                            <xctk:CategoryGroupStyleSelector.ItemGroupStyle>
                                                                <Style TargetType="{x:Type GroupItem}">
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate>
                                                                                <Border>
                                                                                    <Expander x:Name="expander" Header="{Binding Name}" IsExpanded="True">
                                                                                        <Expander.Style>
                                                                                            <Style TargetType="{x:Type Expander}">
                                                                                                <Setter Property="Padding" Value="0"/>
                                                                                                <Setter Property="Background" Value="#FFF0F0F0"/>
                                                                                                <Setter Property="Template">
                                                                                                    <Setter.Value>
                                                                                                        <ControlTemplate TargetType="{x:Type Expander}">
                                                                                                            <Grid>
                                                                                                                <Grid.RowDefinitions>
                                                                                                                    <RowDefinition Height="Auto"/>
                                                                                                                    <RowDefinition x:Name="ContentRow" Height="*"/>
                                                                                                                </Grid.RowDefinitions>
                                                                                                                <Border x:Name="Border" BorderBrush="#FFF0F0F0" Background="{TemplateBinding Background}">
                                                                                                                    <ToggleButton IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" OverridesDefaultStyle="True">
                                                                                                                        <ToggleButton.Template>
                                                                                                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                                                                <Grid>
                                                                                                                                    <Grid.ColumnDefinitions>
                                                                                                                                        <ColumnDefinition Width="20"/>
                                                                                                                                        <ColumnDefinition Width="*"/>
                                                                                                                                    </Grid.ColumnDefinitions>
                                                                                                                                    <Rectangle x:Name="Rectangle" Fill="Transparent" Margin="0"/>
                                                                                                                                    <Path x:Name="Up_Arrow" Data="M0,0L4,4 8,0z" Fill="#FF31347C" HorizontalAlignment="Center" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Center">
                                                                                                                                        <Path.RenderTransform>
                                                                                                                                            <TransformGroup>
                                                                                                                                                <ScaleTransform ScaleY="1" ScaleX="1"/>
                                                                                                                                                <SkewTransform AngleY="0" AngleX="0"/>
                                                                                                                                                <RotateTransform Angle="-90"/>
                                                                                                                                                <TranslateTransform X="0" Y="0"/>
                                                                                                                                            </TransformGroup>
                                                                                                                                        </Path.RenderTransform>
                                                                                                                                    </Path>
                                                                                                                                    <Path x:Name="Down_Arrow" Data="M0,4L4,0 8,4z" Fill="#FF31347C" HorizontalAlignment="Center" RenderTransformOrigin="0.5,0.5" Visibility="Collapsed" VerticalAlignment="Center">
                                                                                                                                        <Path.RenderTransform>
                                                                                                                                            <TransformGroup>
                                                                                                                                                <ScaleTransform ScaleY="1" ScaleX="1"/>
                                                                                                                                                <SkewTransform AngleY="0" AngleX="0"/>
                                                                                                                                                <RotateTransform Angle="135"/>
                                                                                                                                                <TranslateTransform X="0" Y="0"/>
                                                                                                                                            </TransformGroup>
                                                                                                                                        </Path.RenderTransform>
                                                                                                                                    </Path>
                                                                                                                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
                                                                                                                                </Grid>
                                                                                                                                <ControlTemplate.Triggers>
                                                                                                                                    <Trigger Property="IsChecked" Value="True">
                                                                                                                                        <Setter Property="Visibility" TargetName="Down_Arrow" Value="Visible"/>
                                                                                                                                        <Setter Property="Visibility" TargetName="Up_Arrow" Value="Collapsed"/>
                                                                                                                                        <Setter Property="OpacityMask" TargetName="Down_Arrow" Value="Black"/>
                                                                                                                                    </Trigger>
                                                                                                                                </ControlTemplate.Triggers>
                                                                                                                            </ControlTemplate>
                                                                                                                        </ToggleButton.Template>
                                                                                                                        <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" TextElement.FontWeight="Bold" Margin="1" RecognizesAccessKey="True"/>
                                                                                                                    </ToggleButton>
                                                                                                                </Border>
                                                                                                                <Border x:Name="ExpandSite" Background="#FFF0F0F0" Padding="10,0,0,0" Grid.Row="1" Visibility="Collapsed">
                                                                                                                    <Border BorderThickness="0" HorizontalAlignment="Stretch" Margin="0" Padding="0" VerticalAlignment="Stretch">
                                                                                                                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                                    </Border>
                                                                                                                </Border>
                                                                                                            </Grid>
                                                                                                            <ControlTemplate.Triggers>
                                                                                                                <Trigger Property="IsExpanded" Value="True">
                                                                                                                    <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                                                                                                                </Trigger>
                                                                                                            </ControlTemplate.Triggers>
                                                                                                        </ControlTemplate>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                            </Style>
                                                                                        </Expander.Style>
                                                                                        <ItemsPresenter/>
                                                                                    </Expander>
                                                                                </Border>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Style.Triggers>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Value="True">
                                                                                    <Condition.Binding>
                                                                                        <Binding Path="Name">
                                                                                            <Binding.Converter>
                                                                                                <xctk:IsDefaultCategoryConverter/>
                                                                                            </Binding.Converter>
                                                                                        </Binding>
                                                                                    </Condition.Binding>
                                                                                </Condition>
                                                                                <Condition Binding="{Binding IsMiscCategoryLabelHidden, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:PropertyGrid}}}" Value="True"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate TargetType="{x:Type GroupItem}">
                                                                                        <ItemsPresenter/>
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </MultiDataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </xctk:CategoryGroupStyleSelector.ItemGroupStyle>
                                                            <xctk:CategoryGroupStyleSelector.SingleDefaultCategoryItemGroupStyle>
                                                                <Style TargetType="{x:Type GroupItem}">
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate>
                                                                                <ItemsPresenter/>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </xctk:CategoryGroupStyleSelector.SingleDefaultCategoryItemGroupStyle>
                                                        </xctk:CategoryGroupStyleSelector>
                                                    </GroupStyle.ContainerStyleSelector>
                                                </GroupStyle>
                                            </xctk:PropertyItemsControl.GroupStyle>
                                            <xctk:PropertyItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <VirtualizingStackPanel IsItemsHost="True"/>
                                                </ItemsPanelTemplate>
                                            </xctk:PropertyItemsControl.ItemsPanel>
                                        </xctk:PropertyItemsControl>
                                    </ScrollViewer>
                                    <Thumb x:Name="PART_DragThumb" Cursor="SizeWE" HorizontalAlignment="Left" Margin="6,0,0,0" Width="5">
                                        <Thumb.Template>
                                            <ControlTemplate>
                                                <Border Background="Transparent"/>
                                            </ControlTemplate>
                                        </Thumb.Template>
                                    </Thumb>
                                </Grid>
                                <GridSplitter HorizontalAlignment="Stretch" Height="3" Grid.Row="3">
                                    <GridSplitter.Visibility>
                                        <Binding Path="ShowSummary" RelativeSource="{RelativeSource TemplatedParent}">
                                            <Binding.Converter>
                                                <BooleanToVisibilityConverter/>
                                            </Binding.Converter>
                                        </Binding>
                                    </GridSplitter.Visibility>
                                </GridSplitter>
                                <StackPanel Margin="0,0,0,5" Grid.Row="4">
                                    <StackPanel.Visibility>
                                        <Binding Path="ShowSummary" RelativeSource="{RelativeSource TemplatedParent}">
                                            <Binding.Converter>
                                                <BooleanToVisibilityConverter/>
                                            </Binding.Converter>
                                        </Binding>
                                    </StackPanel.Visibility>
                                    <TextBlock FontWeight="Bold" Padding="2,2,2,0" Text="{Binding SelectedPropertyItem.DisplayName, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    <TextBlock Padding="5,2,2,0" TextWrapping="WrapWithOverflow" Text="{Binding SelectedPropertyItem.Description, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </StackPanel>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Visibility" SourceName="searchBoxContainer" Value="Collapsed"/>
                                    <Condition Property="Visibility" SourceName="sortButtonContainer" Value="Collapsed"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Visibility" TargetName="toolsContainer" Value="Collapsed"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Controls:MetroWindow.Resources>
    <Controls:MetroWindow.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
            <BeginStoryboard Storyboard="{StaticResource Storyboard1}"/>
        </EventTrigger>
    </Controls:MetroWindow.Triggers>
    <Controls:MetroWindow.RightWindowCommands>
        <Controls:WindowCommands>
            <Button Content="settings" />
            <Button>
                <StackPanel Orientation="Horizontal">
                    <Rectangle Width="20"
                   Height="20"
                   Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <TextBlock Margin="4 0 0 0"
                   VerticalAlignment="Center"
                   Text="deploy cupcakes" />
                </StackPanel>
            </Button>
        </Controls:WindowCommands>
    </Controls:MetroWindow.RightWindowCommands>
    <Controls:MetroWindow.DataContext>
        <MVVMTestApp:Workspace/>
    </Controls:MetroWindow.DataContext>
    <DockPanel x:Name="grid1" d:LayoutOverrides="Height" Background="#FF252525">

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="VisualStateGroup" ei:ExtendedVisualStateManager.UseFluidLayout="True">
                <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0:0:0.5" ei:ExtendedVisualStateManager.TransitionEffect="{x:Null}"/>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Full">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="stackPanel">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <System:Double>0</System:Double>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="Normal"/>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Menu Margin="0,0,0,0" Background="#FF252525" Foreground="#FFADADAD" DockPanel.Dock="Top">
            <MenuItem Header="파일(_F)" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="13.333" Padding="7,0,8,6">
                <MenuItem Header="새 프로젝트(_N)">
                    <MenuItem.Icon>
                        <Viewbox xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"  Width="16" Height="16">
                            <Rectangle Width="16" Height="16">
                                <Rectangle.Fill>
                                    <DrawingBrush>
                                        <DrawingBrush.Drawing>
                                            <DrawingGroup>
                                                <GeometryDrawing Brush="#00FFFFFF" Geometry="F1M16,16L0,16 0,0 16,0z" />
                                                <GeometryDrawing Brush="#FFF6F6F6" Geometry="F1M5.5859,10L8.5859,7 5.9999,7C4.8979,7 3.9999,7.897 3.9999,9 3.9999,10.104 4.8979,11 5.9999,11L6.9999,11 6.9999,15 5.9999,15C2.6909,15 -0.000100000000000655,12.309 -0.000100000000000655,9 -0.000100000000000655,5.691 2.6909,3 5.9999,3L8.5859,3 5.5859,0 11.4139,0 15.9999,4.586 15.9999,5.414 11.4139,10z" />
                                                <GeometryDrawing Brush="#FF00539C" Geometry="F1M15,5L11,9 8,9 11,6 6,6C4.343,6 3,7.343 3,9 3,10.656 4.343,12 6,12L6,14C3.238,14 1,11.762 1,9 1,6.239 3.238,4 6,4L11,4 8,1 11,1z" />
                                            </DrawingGroup>
                                        </DrawingBrush.Drawing>
                                    </DrawingBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Viewbox>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator HorizontalAlignment="Left" Width="180.303333333333" Margin="0,2" Background="#FF101011" Foreground="Black"/>
                <MenuItem Header="새 맵 만들기_N)" Command="{Binding This.NewCommand, Mode=OneWay}" />
                <MenuItem Header="불러오기(_S)" Command="{Binding This.OpenCommand, Mode=OneWay}" />
                <MenuItem Header="저장(_S)" />
                <MenuItem Header="종료(_X)" />
            </MenuItem>
            <MenuItem Header="편집(_E)" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="13.333" Padding="7,0,8,6">
                <MenuItem Header="실행취소(_D)" Margin="0"/>
                <MenuItem Header="다시실행(_R)" Margin="0"/>
                <Separator Margin="0"/>
                <MenuItem Header="잘라내가(_X)" Margin="0"/>
                <MenuItem Header="복사(_C)" Margin="0"/>
                <MenuItem Header="붙여넣기(_V)" Margin="0"/>
                <MenuItem Header="삭제(_Del)" Margin="0" />
            </MenuItem>
            <MenuItem Header="툴(_T)" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="13.333" Padding="7,0,8,6">
                <MenuItem Header="Properties" IsChecked="{Binding FileStats.IsVisible, Mode=TwoWay}" IsCheckable="True"/>
                <MenuItem Header="PieceListInfo" IsChecked="{Binding PieceListInfo.IsVisible, Mode=TwoWay}" IsCheckable="True"/>
                <MenuItem Header="UIObjectListInfo" IsChecked="{Binding UIObjectListInfo.IsVisible, Mode=TwoWay}" IsCheckable="True"/>
                <MenuItem Header="MarxObjectTree" IsChecked="{Binding MarxObjectTree.IsVisible, Mode=TwoWay}" IsCheckable="True"/>
                <MenuItem Header="ImageControlTree" IsChecked="{Binding ImageControlTree.IsVisible, Mode=TwoWay}" IsCheckable="True"/>
            </MenuItem>
        </Menu>
        <DockPanel x:Name="stackPanel" Height="24" Margin="5,0,0,0" VerticalAlignment="Top" Background="#FF252525" DockPanel.Dock="Top" LastChildFill="False" >
            <Path Data="M73.5,4 L73.5,23.026298" Margin="0" Stretch="Fill" Width="13" StrokeThickness="7" StrokeDashArray="1 0" Stroke="{DynamicResource DotFillBrush}"/>
            <Button Height="24" Width="24" Style="{DynamicResource MineMosterStyle}" Margin="6,0,0,0" Click="Button_Click_4">
                <Viewbox xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" Width="16" Height="16">
                    <Rectangle Width="16" Height="16">
                        <Rectangle.Fill>
                            <DrawingBrush>
                                <DrawingBrush.Drawing>
                                    <DrawingGroup>
                                        <GeometryDrawing Brush="#00FFFFFF" Geometry="F1M16,16L0,16 0,0 16,0z" />
                                        <GeometryDrawing Brush="#FFF6F6F6" Geometry="F1M5.5859,10L8.5859,7 5.9999,7C4.8979,7 3.9999,7.897 3.9999,9 3.9999,10.104 4.8979,11 5.9999,11L6.9999,11 6.9999,15 5.9999,15C2.6909,15 -0.000100000000000655,12.309 -0.000100000000000655,9 -0.000100000000000655,5.691 2.6909,3 5.9999,3L8.5859,3 5.5859,0 11.4139,0 15.9999,4.586 15.9999,5.414 11.4139,10z" />
                                        <GeometryDrawing Brush="#FF00539C" Geometry="F1M15,5L11,9 8,9 11,6 6,6C4.343,6 3,7.343 3,9 3,10.656 4.343,12 6,12L6,14C3.238,14 1,11.762 1,9 1,6.239 3.238,4 6,4L11,4 8,1 11,1z" />
                                    </DrawingGroup>
                                </DrawingBrush.Drawing>
                            </DrawingBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                </Viewbox>
            </Button>
            <Button Height="24" Width="24" Style="{DynamicResource MineMosterStyle}" Margin="6,0,0,0">
                <Viewbox xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" Width="16" Height="16">
                    <Rectangle Width="16" Height="16">
                        <Rectangle.Fill>
                            <DrawingBrush>
                                <DrawingBrush.Drawing>
                                    <DrawingGroup>
                                        <GeometryDrawing Brush="#FF2279BF" Geometry="F1M22,36L22,45.998 10,45.998 10,36 4,36 4,60 28,60 28,40 24,36z M16,42L20,42 20,36 16,36z" />
                                    </DrawingGroup>
                                </DrawingBrush.Drawing>
                            </DrawingBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                </Viewbox>
            </Button>
            <Button Height="24" Width="24" Style="{DynamicResource MineMosterStyle}" Margin="6,0,0,0">
                <!-- This file was generated by the AiToXaml tool.-->
                <!-- Tool Version: 14.0.22307.0 -->
                <Viewbox xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" Width="16" Height="16">
                    <Rectangle Width="16" Height="16">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseLeftButtonDown">
                                <i:InvokeCommandAction Command="{Binding This.NewCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Rectangle.Fill>
                            <DrawingBrush>
                                <DrawingBrush.Drawing>
                                    <DrawingGroup>
                                        <GeometryDrawing Brush="#00FFFFFF" Geometry="F1M16,16L0,16 0,0 16,0z" />
                                        <GeometryDrawing Brush="#FFF6F6F6" Geometry="F1M1.9998,-0.000199999999999534L1.9998,2.0188 -0.000199999999999978,2.0188 -0.000199999999999978,5.9998 1.9998,5.9998 1.9998,15.9998 15.9998,15.9998 15.9998,-0.000199999999999534z" />
                                        <GeometryDrawing Brush="#FF424242" Geometry="F1M15,1L15,15 3,15 3,8 5,8 5,13 13,13 13,3 8,3 8,2.018 6,2.018 6,1z" />
                                        <GeometryDrawing Brush="#FFF0EFF1" Geometry="F1M8,6L8,3 13,3 13,13 5,13 5,8 6,8 6,6z" />
                                        <GeometryDrawing Brush="#FF388A34" Geometry="F1M7,3.0181L5,3.0181 5,1.0001 3.019,1.0001 3.019,3.0181 1,3.0181 1,5.0001 3.019,5.0001 3.019,7.0001 5,7.0001 5,5.0001 7,5.0001z" />
                                    </DrawingGroup>
                                </DrawingBrush.Drawing>
                            </DrawingBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                </Viewbox>
            </Button>
            <Path Data="M73.5,4 L73.5,23.026298" Margin="4,0,0,0" Stretch="Fill" Width="13" StrokeThickness="7" StrokeDashArray="1 0" Stroke="{DynamicResource DotFillBrush}"/>
            <Button Height="24" Width="24" Style="{DynamicResource MineMosterStyle}" Margin="6,0,0,0">
                <Viewbox xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" Width="16" Height="16">
                    <Rectangle Width="16" Height="16">
                        <Rectangle.Fill>
                            <DrawingBrush>
                                <DrawingBrush.Drawing>
                                    <DrawingGroup>
                                        <GeometryDrawing Brush="#00FFFFFF" Geometry="F1M16,16L0,16 0,0 16,0z" />
                                        <GeometryDrawing Brush="#FFF6F6F6" Geometry="F1M11.5029,9C11.3339,9,11.1659,9.014,10.9999,9.041L10.9999,9C10.9999,8.455 10.8559,7.934 10.5839,7.478 11.7569,5.404 12.3779,4.291 12.5299,3.987 12.7349,3.576 12.9919,3.065 12.9999,2.498 13.0079,1.935 12.7629,1.348 12.3429,0.927L11.4139,0 10.3819,0 7.9999,4.764 5.6179,0 4.5889,0 3.6509,0.928000000000001C3.4529,1.125 2.9929,1.673 2.9999,2.475 3.0029,3.064 3.2799,3.619 3.4639,3.987 3.6189,4.296 4.2739,5.471 5.4149,7.479 5.1449,7.936 4.9999,8.456 4.9999,9L4.9999,9.04C4.8349,9.014 4.6679,9 4.5009,9 2.6039,9 0.9999,10.604 0.9999,12.5 0.9999,14.396 2.6039,16 4.5009,16 6.3649,16 7.9999,14.364 7.9999,12.5 7.9999,12.332 7.9999,12.332 7.9999,12.5 7.9999,14.396 9.6049,16 11.5029,16 13.3989,16 14.9999,14.396 14.9999,12.5 14.9999,10.604 13.3989,9 11.5029,9" />
                                        <GeometryDrawing Brush="#FF414141" Geometry="F1M11.4932,14C10.6672,14 10.0002,13.341 10.0002,12.512 10.0002,11.682 10.6672,11 11.4932,11 12.3202,11 13.0002,11.682 13.0002,12.512 13.0002,13.341 12.3202,14 11.4932,14 M8.0022,10C7.4492,10 7.0002,9.553 7.0002,9 7.0002,8.448 7.4472,8 8.0002,8 8.5532,8 9.0002,8.448 9.0002,9 9.0002,9.553 8.5532,10 8.0022,10 M4.4882,14C3.6582,14 3.0002,13.352 3.0002,12.523 3.0002,11.693 3.6582,11 4.4882,11 5.3142,11 6.0002,11.693 6.0002,12.523 6.0002,13.352 5.3142,14 4.4882,14 M11.5032,10C11.0832,10,10.6842,10.127,10.3282,10.328L9.8202,9.82C9.9332,9.57 10.0002,9.293 10.0002,9 10.0002,8.436 9.7632,7.927 9.3862,7.562 10.3282,5.9 11.4392,3.932 11.6362,3.54 11.8062,3.198 11.9952,2.821 12.0002,2.484 12.0052,2.127 11.8152,1.815 11.6362,1.635L11.0002,1 8.0002,7 5.0002,1 4.3582,1.635C4.1802,1.812 3.9972,2.119 4.0002,2.469 4.0022,2.811 4.1852,3.193 4.3582,3.54 4.5552,3.932 5.6682,5.901 6.6132,7.564 6.2362,7.928 6.0002,8.436 6.0002,9 6.0002,9.293 6.0662,9.569 6.1802,9.82L5.6732,10.328C5.3162,10.127 4.9192,10 4.5012,10 3.1702,10 2.0002,11.172 2.0002,12.5 2.0002,13.828 3.1702,15 4.5012,15 5.8282,15 7.0002,13.828 7.0002,12.5 7.0002,12.081 6.8742,11.684 6.6732,11.328L7.1802,10.82C7.4312,10.934 7.7082,11 8.0012,11 8.2942,11 8.5702,10.934 8.8202,10.82L9.3272,11.328C9.1262,11.684 9.0002,12.081 9.0002,12.5 9.0002,13.828 10.1722,15 11.5032,15 12.8342,15 14.0002,13.828 14.0002,12.5 14.0002,11.172 12.8342,10 11.5032,10" />
                                        <GeometryDrawing Brush="#FFF0EFF1" Geometry="F1M13,12.5117C13,11.6817 12.32,10.9997 11.493,10.9997 10.667,10.9997 10,11.6817 10,12.5117 10,13.3407 10.667,13.9997 11.493,13.9997 12.32,13.9997 13,13.3407 13,12.5117 M9,8.9997C9,8.4487 8.553,7.9997 8,7.9997 7.447,7.9997 7,8.4487 7,8.9997 7,9.5527 7.449,9.9997 8.002,9.9997 8.553,9.9997 9,9.5527 9,8.9997 M4.488,13.9997C3.658,13.9997 3,13.3517 3,12.5237 3,11.6937 3.658,10.9997 4.488,10.9997 5.314,10.9997 6,11.6937 6,12.5237 6,13.3517 5.314,13.9997 4.488,13.9997" />
                                    </DrawingGroup>
                                </DrawingBrush.Drawing>
                            </DrawingBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                </Viewbox>
            </Button>
            <Button Height="24" Width="24" Style="{DynamicResource MineMosterStyle}" Margin="6,0,0,0">
                <Viewbox xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" Width="16" Height="16">
                    <Rectangle Width="16" Height="16">
                        <Rectangle.Fill>
                            <DrawingBrush>
                                <DrawingBrush.Drawing>
                                    <DrawingGroup>
                                        <GeometryDrawing Brush="#00FFFFFF" Geometry="F1M16,16L0,16 0,0 16,0z" />
                                        <GeometryDrawing Brush="#FFF6F6F6" Geometry="F1M5.0004,-0.000199999999999534L5.0004,4.0008 0.9994,4.0008 0.9994,15.9998 10.9994,15.9998 10.9994,12.0008 15.0004,12.0008 15.0004,-0.000199999999999534z" />
                                        <GeometryDrawing Brush="#FF424242" Geometry="F1M9,6L3,6 3,14 9,14z M10,15L2,15 2,5 10,5z M11,11L11,10 13,10 13,2 7,2 7,4 6,4 6,1 14,1 14,11z" />
                                        <GeometryDrawing Brush="#FFF0EFF1" Geometry="F1M7,2L7,4 11,4 11,10 13,10 13,2z M9,14L3,14 3,6 9,6z" />
                                    </DrawingGroup>
                                </DrawingBrush.Drawing>
                            </DrawingBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                </Viewbox>
            </Button>
            <Button Height="24" Width="24" Style="{DynamicResource MineMosterStyle}" Margin="6,0,0,0">
                <Viewbox xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" Width="16" Height="16">
                    <Rectangle Width="16" Height="16">
                        <Rectangle.Fill>
                            <DrawingBrush>
                                <DrawingBrush.Drawing>
                                    <DrawingGroup>
                                        <GeometryDrawing Brush="#00FFFFFF" Geometry="F1M16,16L0,16 0,0 16,0z" />
                                        <GeometryDrawing Brush="#FFF6F6F6" Geometry="F1M12,3L12,2 11.01,2C10.598,0.836 9.324,0 8.02,0 6.717,0 5.424,0.836 5.01,2L4,2 4,3 2.01,3C2.01,3,2.007,4.769,2.004,7L0,7 0,16 2.01,16 8,16 14,16 14,3z" />
                                        <GeometryDrawing Brush="#FF424242" Geometry="F1M2,9L6,9 6,14 2,14z M1,15L7,15 7,8 1,8z" />
                                        <GeometryDrawing Brush="#FF414141" Geometry="F1M8.0195,4C7.4685,4 7.0095,3.553 7.0095,3 7.0095,2.447 7.4585,2 8.0095,2 8.5625,2 9.0095,2.447 9.0095,3 9.0095,3.553 8.5725,4 8.0195,4 M10.9995,4L10.9995,3 10.0095,3C10.0095,1.896 9.1155,1 8.0095,1 6.9065,1 6.0095,1.896 6.0095,3L4.9995,3 4.9995,4 2.9995,4 2.9995,7 3.9995,7 3.9995,5 11.9995,5 11.9995,14 7.9995,14 7.9995,15 12.9995,15 12.9995,4z" />
                                        <GeometryDrawing Brush="#FFF0EFF1" Geometry="F1M8.0098,4C8.5628,4 9.0628,3.553 9.0628,3 9.0628,2.447 8.5628,1.953 8.0098,1.953 7.4578,1.953 6.9218,2.447 6.9218,3 6.9218,3.553 7.4578,4 8.0098,4" />
                                        <GeometryDrawing Brush="#FFF0EFF1" Geometry="F1M4,5L4,7 8,7 8,14 12,14 12,5z" />
                                        <GeometryDrawing Brush="#FFF0EFF1" Geometry="F1M6,14L2,14 2,9 6,9z" />
                                    </DrawingGroup>
                                </DrawingBrush.Drawing>
                            </DrawingBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                </Viewbox>
            </Button>
            <Path Data="M73.5,4 L73.5,23.026298" Margin="4,0,0,0" Stretch="Fill" Width="13" StrokeThickness="7" StrokeDashArray="1 0" Stroke="{DynamicResource DotFillBrush}"/>
            <Button Height="24" Width="24" Style="{DynamicResource MineMosterStyle}" Margin="6,0,0,0">
                <Image Height="24" Source="ImageAsset/icons/1373914895_to_do_list_cheked_all.png" Stretch="Fill" Width="24"/>
            </Button>
            <Button Height="24" Width="24" Style="{DynamicResource MineMosterStyle}" Margin="6,0,0,0">
                <Image Height="24" Source="ImageAsset/icons/1373915017_select_by_color.png" Stretch="Fill" Width="24"/>
            </Button>
            <Button Height="24" Width="24" Style="{DynamicResource MineMosterStyle}" Margin="6,0,0,0">
                <Image Height="24" Source="ImageAsset/icons/group-24.png" Stretch="Fill" Width="24"/>
            </Button>
            <Path Data="M73.5,4 L73.5,23.026298" Margin="4,0,0,0" Stretch="Fill" Width="13" StrokeThickness="7" StrokeDashArray="1 0" Stroke="{DynamicResource DotFillBrush}"/>
            <Button Height="24" Width="24" Style="{DynamicResource MineMosterStyle}" Margin="6,0,0,0">
                <Image Height="24" Source="ImageAsset/icons/1373918230_object-rotate-right.png" Stretch="Fill" Width="24"/>
            </Button>
            <Button Height="24" Width="24" Style="{DynamicResource MineMosterStyle}" Margin="6,0,0,0">
                <Image Height="24" Source="ImageAsset/icons/1373918245_move.png" Stretch="Fill" Width="24"/>
            </Button>
            <Button Height="24" Width="24" Style="{DynamicResource MineMosterStyle}" Margin="6,0,0,0">
                <Image Height="24" Source="ImageAsset/icons/Actions-transform-scale-icon.png" Stretch="Fill" Width="24"/>
            </Button>
        </DockPanel>

        <avalonDock:DockingManager x:Name="dockManager" Foreground="{DynamicResource LightBrush}" Background="#FF252525"
			AnchorablesSource="{Binding Tools}" 
			DocumentsSource="{Binding Files}" 
			ActiveContent="{Binding ActiveDocument, Converter={StaticResource ActiveDocumentConverter}, Mode=TwoWay}">
            <avalonDock:DockingManager.Theme>
                <avalonDock:Vs2013DarkTheme/>
            </avalonDock:DockingManager.Theme>
            <avalonDock:DockingManager.LayoutItemTemplateSelector>
                <MVVMTestApp:PanesTemplateSelector>
                    <MVVMTestApp:PanesTemplateSelector.FileStatsViewTemplate>
                        <DataTemplate>
                            <Border Padding="5">
                                <StackPanel Orientation="Vertical">
                                    <TextBlock Text="{Binding FileSize}"/>
                                    <TextBlock Text="{Binding LastModified}"/>
                                    <TextBox Text="test"/>
                                </StackPanel>
                            </Border>
                        </DataTemplate>
                    </MVVMTestApp:PanesTemplateSelector.FileStatsViewTemplate>
                    <MVVMTestApp:PanesTemplateSelector.PieceListInfoViewTemplate>
                        <DataTemplate>
                            <Grid Background="#FF252525" Margin="0" MinWidth="200">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <ListBox x:Name="listBox" ItemTemplate="{DynamicResource PieceInfoTemplate1}" ItemsSource="{Binding pieceList}" ItemsPanel="{DynamicResource ItemsPanelTemplate1}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Margin="0,0,0,42" Background="{DynamicResource Backgroundtransparent}" >
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger SourceName="listBox">
                                            <i:InvokeCommandAction Command="{Binding Instance.Command, Mode=OneWay}" CommandParameter="Load"/>
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="SelectionChanged" SourceName="listBox1" SourceObject="{Binding ElementName=listBox}">
                                            <i:InvokeCommandAction Command="{Binding SelectCommand, Mode=OneWay}" CommandParameter="{Binding SelectedValue, ElementName=listBox}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </ListBox>
                                <Button Content="피스 추가" VerticalAlignment="Bottom" Height="42" Margin="0">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <i:InvokeCommandAction Command="{Binding MakePieceInfo, Mode=OneWay}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                            </Grid>
                        </DataTemplate>
                    </MVVMTestApp:PanesTemplateSelector.PieceListInfoViewTemplate>
                    <MVVMTestApp:PanesTemplateSelector.ObjectTreeTemplate>
                        <DataTemplate>
                            <Grid>
                                <TreeView Margin="0,37,0,0" ItemTemplate="{DynamicResource DataTemplat2}" ItemsSource="{Binding Children}" BorderThickness="0" Background="{DynamicResource Backgroundtransparent}"/>
                                <Grid Height="30" Margin="0" VerticalAlignment="Top" HorizontalAlignment="Stretch">
                                    <TextBox x:Name="textBox1" Margin="0,2,25,2" TextWrapping="Wrap" BorderBrush="#FF4D4D4D" Height="25"/>
                                    <Button HorizontalAlignment="Right" Foreground="White" BorderBrush="{x:Null}" Height="25" Width="25" Padding="2" UseLayoutRounding="True">
                                        <Viewbox xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
                                            <Rectangle Width="28" Height="28">
                                                <Rectangle.Fill>
                                                    <DrawingBrush>
                                                        <DrawingBrush.Drawing>
                                                            <DrawingGroup>
                                                                <GeometryDrawing Brush="#FF7F7F7F" Geometry="F1M10.0791,10.9531C10.0791,7.1581 13.1521,4.1441 16.9451,4.1441 20.7401,4.1441 23.8121,7.1581 23.8121,10.9531 23.8121,14.7451 20.7401,17.8191 16.9451,17.8191 13.1521,17.8191 10.0791,14.7451 10.0791,10.9531 M0.9191,24.0811L3.8321,26.9991 12.5751,18.2621C13.7521,18.8531 14.3291,19.7051 16.9621,19.7051 21.8001,19.7051 25.7161,15.7861 25.7161,10.9531 25.7161,6.1181 21.8001,2.1981 16.9621,2.1981 12.1301,2.1981 8.2511,6.1181 8.2511,10.9531 8.2511,13.8691 9.0601,14.1631 9.6571,15.3441z" />
                                                            </DrawingGroup>
                                                        </DrawingBrush.Drawing>
                                                    </DrawingBrush>
                                                </Rectangle.Fill>
                                            </Rectangle>
                                        </Viewbox>
                                    </Button>
                                </Grid>
                            </Grid>
                        </DataTemplate>
                    </MVVMTestApp:PanesTemplateSelector.ObjectTreeTemplate>
                </MVVMTestApp:PanesTemplateSelector>
            </avalonDock:DockingManager.LayoutItemTemplateSelector>
            <avalonDock:DockingManager.LayoutItemContainerStyleSelector>
                <MVVMTestApp:PanesStyleSelector>
                    <MVVMTestApp:PanesStyleSelector.ToolStyle>
                        <Style TargetType="{x:Type avalonDock:LayoutAnchorableItem}">
                            <Setter Property="Title" Value="{Binding Model.Title}"/>
                            <Setter Property="IconSource" Value="{Binding Model.IconSource}"/>
                            <Setter Property="Visibility" Value="{Binding Model.IsVisible, ConverterParameter={x:Static Visibility.Hidden}, Converter={StaticResource BoolToVisibilityConverter}, Mode=TwoWay}"/>
                            <Setter Property="ContentId" Value="{Binding Model.ContentId}"/>
                            <Setter Property="IsSelected" Value="{Binding Model.IsSelected, Mode=TwoWay}"/>
                            <Setter Property="IsActive" Value="{Binding Model.IsActive, Mode=TwoWay}"/>
                        </Style>
                    </MVVMTestApp:PanesStyleSelector.ToolStyle>
                    <MVVMTestApp:PanesStyleSelector.FileStyle>
                        <Style TargetType="{x:Type avalonDock:LayoutItem}">
                            <Setter Property="Title" Value="{Binding Model.Title}"/>
                            <Setter Property="ToolTip" Value="{Binding Model.FilePath}"/>
                            <Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}"/>
                            <Setter Property="IconSource" Value="{Binding Model.IconSource}"/>
                            <Setter Property="ContentId" Value="{Binding Model.ContentId}"/>
                        </Style>
                    </MVVMTestApp:PanesStyleSelector.FileStyle>
                    <MVVMTestApp:PanesStyleSelector.PieceStyle>
                        <Style TargetType="{x:Type avalonDock:LayoutAnchorableItem}">
                            <Setter Property="Title" Value="{Binding Model.Title}"/>
                            <Setter Property="IconSource" Value="{Binding Model.IconSource}"/>
                            <Setter Property="Visibility" Value="{Binding Model.IsVisible, ConverterParameter={x:Static Visibility.Hidden}, Converter={StaticResource BoolToVisibilityConverter}, Mode=TwoWay}"/>
                            <Setter Property="ContentId" Value="{Binding Model.ContentId}"/>
                            <Setter Property="IsSelected" Value="{Binding Model.IsSelected, Mode=TwoWay}"/>
                            <Setter Property="IsActive" Value="{Binding Model.IsActive, Mode=TwoWay}"/>
                        </Style>
                    </MVVMTestApp:PanesStyleSelector.PieceStyle>
                </MVVMTestApp:PanesStyleSelector>
            </avalonDock:DockingManager.LayoutItemContainerStyleSelector>
            <avalonDock:DockingManager.LayoutUpdateStrategy>
                <MVVMTestApp:LayoutInitializer/>
            </avalonDock:DockingManager.LayoutUpdateStrategy>
            <avalonDock:LayoutRoot x:Name="_layoutRoot">
                <avalonDock:LayoutPanel Orientation="Horizontal">
                    <avalonDock:LayoutDocumentPaneGroup CanRepositionItems="False" IsMaximized="True"  >
                        <avalonDock:LayoutDocumentPane CanRepositionItems="False" ShowHeader="False"  >
                            <avalonDock:LayoutDocument CanClose="False" CanFloat="False" Title="GameScene">
                                <Border x:Name="hwndPlaceholder" RenderTransformOrigin="0.5,0.5" Margin="0" >
                                    <Border.RenderTransform>
                                        <TransformGroup>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Border.RenderTransform>
                                </Border>
                            </avalonDock:LayoutDocument>
                        </avalonDock:LayoutDocumentPane>
                    </avalonDock:LayoutDocumentPaneGroup>
                    <avalonDock:LayoutAnchorablePane DockWidth="300" FloatingHeight="500">
                        <avalonDock:LayoutAnchorable ContentId="Property" Title="Property" CanHide="False" CanClose="False"
							AutoHideWidth="240">
                            <Grid Background="#FF252525" Margin="0" MinWidth="200">
                                <xctk:PropertyGrid d:LayoutOverrides="Width" Margin="0" SelectedObject="{Binding selected}"  Foreground="Black"  >
                                    <xctk:PropertyGrid.Resources>
                                        <ResourceDictionary>
                                            <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="Red" />
                                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Green" />
                                            <SolidColorBrush x:Key="TextBrush" Color="Black" />
                                        </ResourceDictionary>
                                    </xctk:PropertyGrid.Resources>
                                </xctk:PropertyGrid>
                            </Grid>
                        </avalonDock:LayoutAnchorable>
                    </avalonDock:LayoutAnchorablePane>
                </avalonDock:LayoutPanel>
            </avalonDock:LayoutRoot>
        </avalonDock:DockingManager>
    </DockPanel>
</Controls:MetroWindow>